CREATE TABLE  IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email CHARACTER VARYING (255) NOT NULL,
    user_name CHARACTER VARYING (50)  NOT NULL,
    CONSTRAINT users_pk
        PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE  IF NOT EXISTS items
(
    item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name CHARACTER VARYING (50)  NOT NULL,
    item_description CHARACTER VARYING (255),
    available BOOLEAN,
    owner_id INTEGER NOT NULL ,
    request_id INTEGER NOT NULL,
    CONSTRAINT items_pk
        PRIMARY KEY (item_id)
);

CREATE TABLE  IF NOT EXISTS bookings
(
    booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date TIMESTAMP WITHOUT TIME ZONE,
    item_id INTEGER NOT NULL,
    booker_id INTEGER NOT NULL,
    status CHARACTER VARYING(10),
    CONSTRAINT bookings_pk
        PRIMARY KEY (booking_id)
);

CREATE TABLE  IF NOT EXISTS requests
(
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description  CHARACTER VARYING (255) NOT NULL,
    requestor_id INTEGER NOT NULL,
    CONSTRAINT requests_pk
        PRIMARY KEY (request_id)
);

CREATE TABLE  IF NOT EXISTS comments
(
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text CHARACTER VARYING (255) NOT NULL,
    item_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    CONSTRAINT comments_pk
        PRIMARY KEY (comment_id)
);

CREATE TABLE  IF NOT EXISTS owners_items
(
    user_id INTEGER,
    item_id INTEGER,
    CONSTRAINT owners_items_items_item_id_fk
        FOREIGN KEY (item_id) REFERENCES items (item_id),
    CONSTRAINT owners_items_users_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE  IF NOT EXISTS items_requests
(
    item_id INTEGER,
    request_id INTEGER,
    CONSTRAINT items_requests_items_item_id_fk
        FOREIGN KEY (item_id) REFERENCES items (item_id),
    CONSTRAINT items_requests_requests_request_id_fk
        FOREIGN KEY (request_id) REFERENCES requests (request_id)
);

CREATE TABLE  IF NOT EXISTS users_bookings
(
    user_id INTEGER,
    booking_id INTEGER,
    CONSTRAINT users_bookings_bookings_booking_id_fk
        FOREIGN KEY (booking_id) REFERENCES bookings (booking_id),
    CONSTRAINT users_bookings_users_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE  IF NOT EXISTS items_bookings
(
    item_id INTEGER,
    booking_id INTEGER,
    CONSTRAINT items_bookings_bookings_booking_id_fk
        FOREIGN KEY (booking_id) REFERENCES bookings (booking_id),
    CONSTRAINT items_bookings_items_item_id_fk
        FOREIGN KEY (item_id) REFERENCES items (item_id)
);

CREATE TABLE  IF NOT EXISTS requestors_users
(
    request_id INTEGER,
    user_id INTEGER,
    CONSTRAINT requestors_users_requests_request_id_fk
        FOREIGN KEY (request_id) REFERENCES requests (request_id),
    CONSTRAINT requestors_users_users_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE  IF NOT EXISTS items_comments
(
    item_id INTEGER,
    comment_id INTEGER,
    CONSTRAINT items_comments_comments_comment_id_fk
        FOREIGN KEY (comment_id) REFERENCES comments (comment_id),
    CONSTRAINT items_comments_items_item_id_fk
        FOREIGN KEY (item_id) REFERENCES items (item_id)
);

CREATE TABLE  IF NOT EXISTS users_comments
(
    user_id INTEGER,
    comment_id INTEGER,
    CONSTRAINT users_comments_comments_comment_id_fk
        FOREIGN KEY (comment_id) REFERENCES comments (comment_id),
    CONSTRAINT users_comments_users_user_id_fk
        FOREIGN KEY (user_id) REFERENCES users (user_id)
);